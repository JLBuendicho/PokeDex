// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokeDexAPI.Data;

#nullable disable

namespace PokeDexAPI.Migrations
{
    [DbContext(typeof(PokeDexDbContext))]
    [Migration("20250622193851_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PokeDexAPI.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Types")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attack = 50,
                            Defense = 50,
                            Description = "When it is angered, it immediately discharges the energy stored in the pouches in its cheeks.",
                            HP = 50,
                            ImageUrl = "/pokemon-images/Pikachu_20250623010509754.png",
                            Name = "Pikachu",
                            Types = "[\"Electric\"]"
                        },
                        new
                        {
                            Id = 2,
                            Attack = 50,
                            Defense = 50,
                            Description = "The flame on its tail shows the strength of its life-force. If Charmander is weak, the flame also burns weakly.",
                            HP = 50,
                            ImageUrl = "/pokemon-images/Charmander_20250623010537519.png",
                            Name = "Charmander",
                            Types = "[\"Fire\"]"
                        },
                        new
                        {
                            Id = 3,
                            Attack = 50,
                            Defense = 50,
                            Description = "For some time after its birth, it uses the nutrients that are packed into the seed on its back in order to grow.",
                            HP = 50,
                            ImageUrl = "/pokemon-images/Bulbasaur_20250623010553851.png",
                            Name = "Bulbasaur",
                            Types = "[\"Grass\",\"Poison\"]"
                        },
                        new
                        {
                            Id = 4,
                            Attack = 50,
                            Defense = 50,
                            Description = "After birth, its back swells and hardens into a shell. It sprays a potent foam from its mouth.",
                            HP = 50,
                            ImageUrl = "/pokemon-images/Squirtle_20250623033113036.png",
                            Name = "Squirtle",
                            Types = "[\"Water\"]"
                        });
                });

            modelBuilder.Entity("PokeDexAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@mail.com",
                            PasswordHash = "$2a$12$CmuA1Wq06pIw9qmkHyfav.DnPaE0.qSFVXh3DwCkF2mZi8H6TJmUu",
                            ProfilePictureUrl = "/profile-pictures/1.png",
                            Role = "Admin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johnny@mail.com",
                            PasswordHash = "$2a$12$CmuA1Wq06pIw9qmkHyfav.DnPaE0.qSFVXh3DwCkF2mZi8H6TJmUu",
                            ProfilePictureUrl = "/profile-pictures/2.png",
                            Role = "Admin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Johnny"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lamuel@mail.com",
                            PasswordHash = "$2a$12$CmuA1Wq06pIw9qmkHyfav.DnPaE0.qSFVXh3DwCkF2mZi8H6TJmUu",
                            ProfilePictureUrl = "/profile-pictures/3.png",
                            Role = "Admin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Lamuel"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "peepoo@mail.com",
                            PasswordHash = "$2a$12$CmuA1Wq06pIw9qmkHyfav.DnPaE0.qSFVXh3DwCkF2mZi8H6TJmUu",
                            ProfilePictureUrl = "/profile-default.svg",
                            Role = "Admin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "peepeepoopoo"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "griffith@mail.com",
                            PasswordHash = "$2a$12$CmuA1Wq06pIw9qmkHyfav.DnPaE0.qSFVXh3DwCkF2mZi8H6TJmUu",
                            ProfilePictureUrl = "/profile-pictures/5.png",
                            Role = "User",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Peter Griffith"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "guts@mail.com",
                            PasswordHash = "$2a$12$CmuA1Wq06pIw9qmkHyfav.DnPaE0.qSFVXh3DwCkF2mZi8H6TJmUu",
                            ProfilePictureUrl = "/profile-pictures/6.png",
                            Role = "User",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "Guts N Glory"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
